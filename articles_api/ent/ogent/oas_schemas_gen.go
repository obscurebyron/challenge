// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"time"

	"github.com/go-faster/jx"
)

// Ref: #/components/schemas/ArticleCreate
type ArticleCreate struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *ArticleCreate) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *ArticleCreate) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *ArticleCreate) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ArticleCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ArticleCreate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *ArticleCreate) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *ArticleCreate) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *ArticleCreate) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ArticleCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ArticleCreate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

func (*ArticleCreate) createArticleRes() {}

// Ref: #/components/schemas/ArticleList
type ArticleList struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *ArticleList) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *ArticleList) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *ArticleList) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ArticleList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ArticleList) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *ArticleList) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *ArticleList) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *ArticleList) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ArticleList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ArticleList) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// Ref: #/components/schemas/ArticleRead
type ArticleRead struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *ArticleRead) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *ArticleRead) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *ArticleRead) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ArticleRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ArticleRead) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *ArticleRead) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *ArticleRead) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *ArticleRead) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ArticleRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ArticleRead) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

func (*ArticleRead) readArticleRes() {}

// Ref: #/components/schemas/ArticleUpdate
type ArticleUpdate struct {
	ID        int       `json:"id"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *ArticleUpdate) GetID() int {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *ArticleUpdate) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *ArticleUpdate) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ArticleUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ArticleUpdate) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *ArticleUpdate) SetID(val int) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *ArticleUpdate) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *ArticleUpdate) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ArticleUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ArticleUpdate) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

func (*ArticleUpdate) updateArticleRes() {}

type CreateArticleReq struct {
	Title     string    `json:"title"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetTitle returns the value of Title.
func (s *CreateArticleReq) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *CreateArticleReq) GetContent() string {
	return s.Content
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateArticleReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *CreateArticleReq) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetTitle sets the value of Title.
func (s *CreateArticleReq) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *CreateArticleReq) SetContent(val string) {
	s.Content = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateArticleReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *CreateArticleReq) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// DeleteArticleNoContent is response for DeleteArticle operation.
type DeleteArticleNoContent struct{}

func (*DeleteArticleNoContent) deleteArticleRes() {}

type ListArticleOKApplicationJSON []ArticleList

func (*ListArticleOKApplicationJSON) listArticleRes() {}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createArticleRes() {}
func (*R400) deleteArticleRes() {}
func (*R400) listArticleRes()   {}
func (*R400) readArticleRes()   {}
func (*R400) updateArticleRes() {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteArticleRes() {}
func (*R404) listArticleRes()   {}
func (*R404) readArticleRes()   {}
func (*R404) updateArticleRes() {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createArticleRes() {}
func (*R409) deleteArticleRes() {}
func (*R409) listArticleRes()   {}
func (*R409) readArticleRes()   {}
func (*R409) updateArticleRes() {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createArticleRes() {}
func (*R500) deleteArticleRes() {}
func (*R500) listArticleRes()   {}
func (*R500) readArticleRes()   {}
func (*R500) updateArticleRes() {}

type UpdateArticleReq struct {
	Title     OptString   `json:"title"`
	Content   OptString   `json:"content"`
	UpdatedAt OptDateTime `json:"updated_at"`
}

// GetTitle returns the value of Title.
func (s *UpdateArticleReq) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *UpdateArticleReq) GetContent() OptString {
	return s.Content
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *UpdateArticleReq) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetTitle sets the value of Title.
func (s *UpdateArticleReq) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *UpdateArticleReq) SetContent(val OptString) {
	s.Content = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *UpdateArticleReq) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}
